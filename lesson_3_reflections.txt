When would you want to use a remote repository rather than keeping all your work local?
--To use as a safeguard against losing your work on your local machine.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
—-Manually pulling changes ensures that the repository is only updated when it is necessary and prevents unnecessary updating. 

Describe the differences between forks, clones, and branches. When would you use one instead of another?
—- A clone is an exact copy of a repository which can be done on your local machine or on GitHub. A fork is specific to GitHub which is a clone of a repository that points to the original project. A branch is a diversion from the master in the same repository. Clone to be used on your local machine when making changes, fork to be used only on GitHub when a clone is needed and branch when something needs to be changed from the master but a working version is still needed.  

What is the benefit of having a copy of the last known state of the remote stored locally?
—- You can create a fast-forward merge since any update beyond that point would be able to point back to that version.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
—- You could collaborate using email, a messaging system, or a shared document noting the changes. However these methods would make it very difficult to work on the same files concurrently and would be very tedious. 

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
—- When there is a lot of collaboration and many users working on the file. Using a separate branch would help ensure that the master working branch is not broken when updates are made. 


