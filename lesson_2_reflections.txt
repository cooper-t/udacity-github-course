
What happens when you initialize a repository? Why do you need to do it?
—- A new repository is created with no commits. Initialize has to be run to create the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?
—- The staging area is a transition space for files that will be moved to the repository. This allows several documents or files to be grouped together before being put in the repository to allow logical changes to happen across multiple documents.

How can you use the staging area to make sure you have one commit per logical change?
—- By using the diff command to compare what has been changed from the last commit and only staging the appropriate files.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
—- Branches would be helpful when trying something new but you want to original intact. Having a branch is basically saving a separate version.

How do the diagrams help you visualize the branch structure?
—- Diagrams give a visual representation of where changes were added and what was added to the original master branch after creating a new branch.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
—- Merging two branches creates a new master where all changes that occurred from the time of the branch to the merge are incorporated in the new master.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
—- A pro is it can perform the merging without having to look over changes that need any attention. A pro of manual merges is you can correct errors before they are introduced.
